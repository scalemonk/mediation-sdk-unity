// GENERATED BY UNITY. REMOVE THIS COMMENT TO PREVENT OVERWRITING WHEN EXPORTING AGAIN

buildscript {
    repositories {**ARTIFACTORYREPOSITORY**
        mavenCentral()
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.3'
**BUILD_SCRIPT_DEPS**}
}

allprojects {
    repositories {**ARTIFACTORYREPOSITORY**
        mavenCentral()
        google()
        jcenter()
        flatDir {
            dirs 'libs'
        }
    }
}

// Android Resolver Repos Start
([rootProject] + (rootProject.subprojects as List)).each {
    ext {
        it.setProperty("android.useAndroidX", true)
        it.setProperty("android.enableJetifier", true)
    }
}
([rootProject] + (rootProject.subprojects as List)).each { project ->
    project.repositories {
        def unityProjectPath = $/file:///**DIR_UNITYPROJECT**/$.replace("\\", "/")
        maven {
            url "https://maven.google.com"
        }
        maven {
            url "https://scalemonk.jfrog.io/artifactory/scalemonk-gradle-prod" // Assets/Scalemonk Ads/Editor/ScaleMonkAdsDependencies.xml:25
        }
        maven {
            url "https://android-sdk.is.com/" // Assets/Scalemonk Ads/Editor/ScaleMonkAdsDependencies.xml:25
        }
        maven {
            url "https://dl-maven-android.mintegral.com/repository/mbridge_android_sdk_oversea" // Assets/Scalemonk Ads/Editor/ScaleMonkAdsDependencies.xml:25
        }
        maven {
            url "https://s3.amazonaws.com/smaato-sdk-releases/" // Assets/Scalemonk Ads/Editor/ScaleMonkAdsDependencies.xml:25
        }
        mavenLocal()
        jcenter()
        mavenCentral()
    }
}
// Android Resolver Repos End
apply plugin: 'com.android.application'
**APPLY_PLUGINS**

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
// Android Resolver Dependencies Start
    implementation 'com.scalemonk.libs:ads:4.0.0' // Assets/Scalemonk Ads/Editor/ScaleMonkAdsDependencies.xml:4
    implementation 'com.scalemonk.libs:ads-adcolony:+' // Assets/Scalemonk Ads/Editor/ScaleMonkAdsDependencies.xml:5
    implementation 'com.scalemonk.libs:ads-admob:+' // Assets/Scalemonk Ads/Editor/ScaleMonkAdsDependencies.xml:6
    implementation 'com.scalemonk.libs:ads-applovin:+' // Assets/Scalemonk Ads/Editor/ScaleMonkAdsDependencies.xml:7
    implementation 'com.scalemonk.libs:ads-chartboost:+' // Assets/Scalemonk Ads/Editor/ScaleMonkAdsDependencies.xml:8
    implementation 'com.scalemonk.libs:ads-facebook:+' // Assets/Scalemonk Ads/Editor/ScaleMonkAdsDependencies.xml:9
    implementation 'com.scalemonk.libs:ads-fyber:+' // Assets/Scalemonk Ads/Editor/ScaleMonkAdsDependencies.xml:10
    implementation 'com.scalemonk.libs:ads-inmobi:+' // Assets/Scalemonk Ads/Editor/ScaleMonkAdsDependencies.xml:11
    implementation 'com.scalemonk.libs:ads-ironsource:+' // Assets/Scalemonk Ads/Editor/ScaleMonkAdsDependencies.xml:12
    implementation 'com.scalemonk.libs:ads-mintegral:+' // Assets/Scalemonk Ads/Editor/ScaleMonkAdsDependencies.xml:13
    implementation 'com.scalemonk.libs:ads-mopub:+' // Assets/Scalemonk Ads/Editor/ScaleMonkAdsDependencies.xml:14
    implementation 'com.scalemonk.libs:ads-smaato:+' // Assets/Scalemonk Ads/Editor/ScaleMonkAdsDependencies.xml:15
    implementation 'com.scalemonk.libs:ads-tiktok:+' // Assets/Scalemonk Ads/Editor/ScaleMonkAdsDependencies.xml:16
    implementation 'com.scalemonk.libs:ads-unityads:+' // Assets/Scalemonk Ads/Editor/ScaleMonkAdsDependencies.xml:17
    implementation 'com.scalemonk.libs:ads-vungle:+' // Assets/Scalemonk Ads/Editor/ScaleMonkAdsDependencies.xml:18
// Android Resolver Dependencies End
**DEPS**}

// Android Resolver Exclusions Start
android {
  packagingOptions {
      exclude ('/lib/arm64-v8a/*' + '*')
      exclude ('/lib/armeabi/*' + '*')
      exclude ('/lib/mips/*' + '*')
      exclude ('/lib/mips64/*' + '*')
      exclude ('/lib/x86_64/*' + '*')
  }
}
// Android Resolver Exclusions End
android {
    compileSdkVersion **APIVERSION**
    buildToolsVersion '**BUILDTOOLS**'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion **MINSDKVERSION**
        targetSdkVersion **TARGETSDKVERSION**
        applicationId '**APPLICATIONID**'
        ndk {
            abiFilters **ABIFILTERS**
        }
        versionCode **VERSIONCODE**
        versionName '**VERSIONNAME**'
    }

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        noCompress = ['.unity3d', '.ress', '.resource', '.obb'**STREAMING_ASSETS**]
    }**SIGN**

    buildTypes {
        debug {
            minifyEnabled **MINIFY_DEBUG**
            useProguard **PROGUARD_DEBUG**
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'**USER_PROGUARD**
            jniDebuggable true
        }
        release {
            minifyEnabled **MINIFY_RELEASE**
            useProguard **PROGUARD_RELEASE**
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'**USER_PROGUARD****SIGNCONFIG**
        }
    }**PACKAGING_OPTIONS****SPLITS**
**BUILT_APK_LOCATION**
    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = true
        }
    }
}**SPLITS_VERSION_CODE****REPOSITORIES****SOURCE_BUILD_SETUP**
